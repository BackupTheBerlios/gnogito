<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="org.omg/standards/UML" verified="false" timestamp="" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.2.0</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.model xmi.name="gnogito-model" href="/home/matthias/projects/gnogito/cvs/analyse/uml/gnogito-model.xmi" />
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <docsettings viewid="368" documentation="" uniqueid="398" />
  <UML:Model>
   <UML:DataType stereotype="Datentyp" visibility="public" xmi.id="2" name="int" />
   <UML:DataType stereotype="Datentyp" visibility="public" xmi.id="3" name="char" />
   <UML:DataType stereotype="Datentyp" visibility="public" xmi.id="4" name="bool" />
   <UML:DataType stereotype="Datentyp" visibility="public" xmi.id="5" name="float" />
   <UML:DataType stereotype="Datentyp" visibility="public" xmi.id="6" name="double" />
   <UML:DataType stereotype="Datentyp" visibility="public" xmi.id="7" name="long" />
   <UML:DataType stereotype="Datentyp" visibility="public" xmi.id="8" name="short" />
   <UML:DataType stereotype="Datentyp" visibility="public" xmi.id="9" name="string" />
   <UML:Actor visibility="public" xmi.id="10" name="Lerner" />
   <UML:Actor visibility="public" xmi.id="11" name="Editierer" />
   <UML:UseCase visibility="public" xmi.id="13" name="Wissenspaket laden" />
   <UML:UseCase visibility="public" xmi.id="14" name="Wissenspaket speichern" />
   <UML:UseCase visibility="public" xmi.id="15" name="Lerninformation zu einer Begriffsbeschreibung erzeugen" />
   <UML:UseCase visibility="public" xmi.id="16" name="Inhalte lernen" />
   <UML:UseCase visibility="public" xmi.id="18" name="Wissenspaket erzeugen" />
   <UML:UseCase visibility="public" xmi.id="19" name="Wissensstruktur erzeugen" />
   <UML:UseCase visibility="public" xmi.id="20" name="Begriff erzeugen" />
   <UML:UseCase visibility="public" xmi.id="21" name="Begriffsreferenz erzeugen" />
   <UML:UseCase visibility="public" xmi.id="22" name="Begriff löschen" />
   <UML:UseCase visibility="public" xmi.id="23" name="Begriffsbeschreibung editieren" />
   <UML:UseCase visibility="public" xmi.id="24" name="Begriff kopieren" />
   <UML:UseCase visibility="public" xmi.id="25" name="Begriffsposition ändern" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="27" name="Wissenspaket" >
    <UML:Attribute visibility="public" xmi.id="103" value="" type="string" name="name" />
    <UML:Attribute visibility="public" xmi.id="104" value="" type="string" name="beschreibung" />
    <UML:Attribute comment="Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten." visibility="public" xmi.id="102" value="" type="string" name="reifegrad" />
   </UML:Class>
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="28" name="Wissensstruktur" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="29" name="Wissensbehaelter" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="30" name="Wissensobjekt" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="31" name="Begriffsstruktur" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="32" name="Begriff" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="33" name="Begriffsbeschreibung" />
   <UML:Component executable="1" visibility="public" xmi.id="46" name="RichClientPlatformKo" />
   <UML:Component executable="0" visibility="public" xmi.id="47" name="GnogitokernKo" />
   <UML:Component executable="0" visibility="public" xmi.id="48" name="Plugin1Ko" />
   <UML:Component executable="0" visibility="public" xmi.id="49" name="Plugin2Ko" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="106" name="Metainformation" >
    <UML:Attribute visibility="public" xmi.id="108" value="" type="string" name="kategorien" />
    <UML:Attribute visibility="public" xmi.id="110" value="" type="string" name="schluesselworte" />
    <UML:Attribute visibility="public" xmi.id="109" value="" type="string" name="historie" />
   </UML:Class>
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="220" name="Diagramm" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="271" name="Laufzeitsystem" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="273" name="I18n" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="274" name="Benutzerverwaltung" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="275" name="XMLparser" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="276" name="Sitzungskontrolle" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="277" name="Pluginverwaltung" />
   <UML:Interface stereotype="Schnittstelle" visibility="public" xmi.id="280" isAbstract="true" name="Ressource" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="286" name="Ressourcenverwaltung" />
   <UML:DataType stereotype="Datentyp" visibility="public" xmi.id="290" name="IrgendeinPlugin" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="381" name="Lernprogramm" />
   <UML:Interface stereotype="Schnittstelle" visibility="public" xmi.id="382" isAbstract="true" name="Lernbar" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="389" name="Gesamtwissen" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="390" name="Benutzer" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="391" name="Repository" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="392" name="Gemeinschaft" />
   <UML:Class stereotype="Klasse" visibility="public" xmi.id="393" name="Lernstrategie" />
   <UML:Association visibility="public" xmi.id="36" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="27" multiplicity="1" />
     <UML:AssociationEndRole visibility="public" type="28" multiplicity="*" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="37" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="28" multiplicity="1" />
     <UML:AssociationEndRole visibility="public" type="29" multiplicity="*" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="38" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="29" multiplicity="1..*" />
     <UML:AssociationEndRole visibility="public" type="30" multiplicity="*" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="31" visibility="public" xmi.id="39" parent="28" />
   <UML:Generalization child="32" visibility="public" xmi.id="40" parent="29" />
   <UML:Generalization child="33" visibility="public" xmi.id="41" parent="30" />
   <UML:Association visibility="public" xmi.id="156" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="27" />
     <UML:AssociationEndRole visibility="public" type="106" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="30" visibility="public" xmi.id="281" parent="280" />
   <UML:Generalization child="27" visibility="public" xmi.id="282" parent="280" />
   <UML:Generalization child="28" visibility="public" xmi.id="283" parent="280" />
   <UML:Generalization child="29" visibility="public" xmi.id="284" parent="280" />
   <UML:Association visibility="public" xmi.id="379" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="31" multiplicity="1" />
     <UML:AssociationEndRole visibility="public" type="32" multiplicity="*" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Association visibility="public" xmi.id="380" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="32" multiplicity="1..*" />
     <UML:AssociationEndRole visibility="public" type="33" multiplicity="*" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="28" visibility="public" xmi.id="383" parent="382" />
   <UML:Generalization child="29" visibility="public" xmi.id="384" parent="382" />
   <UML:Generalization child="30" visibility="public" xmi.id="385" parent="382" />
   <UML:Generalization child="27" visibility="public" xmi.id="386" parent="382" />
   <UML:Association visibility="public" xmi.id="388" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="381" multiplicity="1" />
     <UML:AssociationEndRole visibility="public" type="382" multiplicity="*" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="389" visibility="public" xmi.id="395" parent="27" />
   <UML:Association visibility="public" xmi.id="397" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="shared" type="32" />
     <UML:AssociationEndRole visibility="public" type="220" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="220" visibility="public" xmi.id="398" parent="30" />
  </UML:Model>
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="810" snapy="10" showatts="1" xmi.id="12" documentation="" type="400" showops="1" showpackage="0" name="Lerner-Anwendungsfaelle" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="617" >
    <widgets>
     <UML:ActorWidget usesdiagramfillcolour="1" width="45" usesdiagramusefillcolour="1" x="66" linecolour="none" y="254" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="60" usefillcolor="1" isinstance="0" xmi.id="10" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="1" width="117" usesdiagramusefillcolour="1" x="210" linecolour="none" y="132" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="13" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="1" width="138" usesdiagramusefillcolour="1" x="253" linecolour="none" y="214" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="14" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="1" width="313" usesdiagramusefillcolour="1" x="170" linecolour="none" y="296" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="15" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="1" width="88" usesdiagramusefillcolour="1" x="155" linecolour="none" y="381" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="16" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="4" indexb="1" widgetbid="10" widgetaid="13" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="268" starty="182" />
       <endpoint endx="111" endy="269" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="4" indexb="2" widgetbid="10" widgetaid="14" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="253" starty="239" />
       <endpoint endx="111" endy="284" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="4" indexb="3" widgetbid="10" widgetaid="15" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="326" starty="296" />
       <endpoint endx="111" endy="299" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="10" widgetaid="16" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="199" starty="381" />
       <endpoint endx="88" endy="314" />
      </linepath>
     </UML:AssocWidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="810" snapy="10" showatts="1" xmi.id="17" documentation="" type="400" showops="1" showpackage="0" name="Editierer-Anwendungsfall" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="617" >
    <widgets>
     <UML:ActorWidget usesdiagramfillcolour="1" width="54" usesdiagramusefillcolour="1" x="75" linecolour="none" y="262" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="60" usefillcolor="1" isinstance="0" xmi.id="11" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="0" width="136" usesdiagramusefillcolour="1" x="31" linecolour="none" y="42" instancename="" usesdiagramlinecolour="1" fillcolour="#8894ff" height="50" usefillcolor="1" isinstance="0" xmi.id="18" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="0" width="117" usesdiagramusefillcolour="1" x="109" linecolour="none" y="94" instancename="" usesdiagramlinecolour="1" fillcolour="#8894ff" height="50" usefillcolor="1" isinstance="0" xmi.id="13" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="0" width="138" usesdiagramusefillcolour="1" x="188" linecolour="none" y="49" instancename="" usesdiagramlinecolour="1" fillcolour="#8894ff" height="50" usefillcolor="1" isinstance="0" xmi.id="14" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="1" width="145" usesdiagramusefillcolour="1" x="372" linecolour="none" y="53" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="50" usefillcolor="1" isinstance="0" xmi.id="19" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="0" width="99" usesdiagramusefillcolour="1" x="299" linecolour="none" y="222" instancename="" usesdiagramlinecolour="1" fillcolour="#4dff47" height="50" usefillcolor="1" isinstance="0" xmi.id="20" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="0" width="148" usesdiagramusefillcolour="1" x="345" linecolour="none" y="270" instancename="" usesdiagramlinecolour="1" fillcolour="#4dff47" height="50" usefillcolor="1" isinstance="0" xmi.id="21" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="0" width="90" usesdiagramusefillcolour="1" x="343" linecolour="none" y="329" instancename="" usesdiagramlinecolour="1" fillcolour="#4dff47" height="50" usefillcolor="1" isinstance="0" xmi.id="22" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="0" width="175" usesdiagramusefillcolour="1" x="300" linecolour="none" y="405" instancename="" usesdiagramlinecolour="1" fillcolour="#4dff47" height="50" usefillcolor="1" isinstance="0" xmi.id="23" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="0" width="97" usesdiagramusefillcolour="1" x="151" linecolour="none" y="391" instancename="" usesdiagramlinecolour="1" fillcolour="#4dff47" height="50" usefillcolor="1" isinstance="0" xmi.id="24" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="0" width="135" usesdiagramusefillcolour="1" x="282" linecolour="none" y="479" instancename="" usesdiagramlinecolour="1" fillcolour="#4dff47" height="50" usefillcolor="1" isinstance="0" xmi.id="25" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:UseCaseWidget usesdiagramfillcolour="0" width="313" usesdiagramusefillcolour="0" x="0" linecolour="#ff0000" y="445" instancename="" usesdiagramlinecolour="0" fillcolour="#4dff47" height="50" usefillcolor="1" isinstance="0" xmi.id="15" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="4" indexb="1" widgetbid="11" widgetaid="18" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="99" starty="92" />
       <endpoint endx="88" endy="262" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="4" indexb="2" widgetbid="11" widgetaid="13" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="167" starty="144" />
       <endpoint endx="102" endy="262" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="4" indexb="3" widgetbid="11" widgetaid="14" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="257" starty="99" />
       <endpoint endx="115" endy="262" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="7" indexb="1" widgetbid="11" widgetaid="19" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="444" starty="103" />
       <endpoint endx="129" endy="270" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="7" indexb="2" widgetbid="11" widgetaid="20" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="299" starty="247" />
       <endpoint endx="129" endy="279" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="7" indexb="3" widgetbid="11" widgetaid="21" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="345" starty="295" />
       <endpoint endx="129" endy="287" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="7" indexb="4" widgetbid="11" widgetaid="22" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="343" starty="354" />
       <endpoint endx="129" endy="296" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="7" indexb="5" widgetbid="11" widgetaid="23" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="387" starty="405" />
       <endpoint endx="129" endy="304" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="11" widgetaid="24" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="199" starty="391" />
       <endpoint endx="111" endy="322" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="7" indexb="6" widgetbid="11" widgetaid="25" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="349" starty="479" />
       <endpoint endx="129" endy="313" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="1" widgetbid="11" widgetaid="15" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="156" starty="445" />
       <endpoint endx="93" endy="322" />
      </linepath>
     </UML:AssocWidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" zoom="81" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1000" snapy="10" showatts="1" xmi.id="26" documentation="" type="402" showops="1" showpackage="0" name="Wissensmodell" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="762" >
    <widgets>
     <UML:ClassWidget usesdiagramfillcolour="0" width="137" showattsigs="601" usesdiagramusefillcolour="0" x="322" linecolour="#ff0000" y="285" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="67" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="27" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="102" showattsigs="601" usesdiagramusefillcolour="0" x="337" linecolour="#ff0000" y="405" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="28" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="112" showattsigs="601" usesdiagramusefillcolour="1" x="333" linecolour="none" y="486" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="29" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="90" showattsigs="601" usesdiagramusefillcolour="1" x="342" linecolour="none" y="577" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="30" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="101" showattsigs="601" usesdiagramusefillcolour="1" x="557" linecolour="none" y="405" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="31" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="60" showattsigs="601" usesdiagramusefillcolour="1" x="559" linecolour="none" y="486" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="32" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="131" showattsigs="601" usesdiagramusefillcolour="1" x="557" linecolour="none" y="577" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="33" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="105" usesdiagramusefillcolour="1" x="172" linecolour="none" y="278" instancename="" usesdiagramlinecolour="1" fillcolour="#d9ffb7" height="58" usefillcolor="1" isinstance="0" xmi.id="98" text="Pendant in der Realität:
z. B. Datei." font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="102" usesdiagramusefillcolour="1" x="173" linecolour="none" y="373" instancename="" usesdiagramlinecolour="1" fillcolour="#d9ffb7" height="73" usefillcolor="1" isinstance="0" xmi.id="99" text="Pendant in der Realität:
Ordnung halten." font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="102" usesdiagramusefillcolour="1" x="173" linecolour="none" y="466" instancename="" usesdiagramlinecolour="1" fillcolour="#d9ffb7" height="89" usefillcolor="1" isinstance="0" xmi.id="100" text="Pendant in der Realität:
Schublade, Ablage, Ordner." font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="105" usesdiagramusefillcolour="1" x="171" linecolour="none" y="566" instancename="" usesdiagramlinecolour="1" fillcolour="#d9ffb7" height="63" usefillcolor="1" isinstance="0" xmi.id="101" text="Pendant in der Realität:
Lerninhalte." font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="147" showattsigs="601" usesdiagramusefillcolour="0" x="318" linecolour="#ff0000" y="163" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="67" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="106" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="123" usesdiagramusefillcolour="1" x="516" linecolour="none" y="57" instancename="" usesdiagramlinecolour="1" fillcolour="#c6ffba" height="136" usefillcolor="1" isinstance="0" xmi.id="124" text="Dient insbesondere der späteren Suche
nach geeigneten Wissenspaketen, ihrer
Einordnung etc." font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <boxwidget usesdiagramfillcolour="1" width="242" usesdiagramusefillcolour="1" x="539" linecolour="none" y="362" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="268" usefillcolor="1" isinstance="0" xmi.id="218" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:FloatingTextWidget usesdiagramfillcolour="1" width="56" usesdiagramusefillcolour="1" x="702" linecolour="none" y="491" instancename="" posttext="" usesdiagramlinecolour="1" role="700" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="219" text="Beispiele" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="132" usesdiagramusefillcolour="1" x="615" linecolour="none" y="215" instancename="" usesdiagramlinecolour="1" fillcolour="#c6ffba" height="119" usefillcolor="1" isinstance="0" xmi.id="342" text="Wissensstrukturen lassen sich innerhalb eines Wissenspaketes als eine geordnete Liste vorstellen." font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="28" widgetaid="27" xmi.id="36" >
      <linepath>
       <startpoint startx="390" starty="352" />
       <endpoint endx="371" endy="405" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="14" usesdiagramusefillcolour="1" x="392" linecolour="none" y="354" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="36" text="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="389" linecolour="none" y="384" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="36" text="*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="29" widgetaid="28" xmi.id="37" >
      <linepath>
       <startpoint startx="388" starty="434" />
       <endpoint endx="389" endy="486" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="14" usesdiagramusefillcolour="1" x="369" linecolour="none" y="436" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="37" text="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="391" linecolour="none" y="465" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="37" text="*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="30" widgetaid="29" xmi.id="38" >
      <linepath>
       <startpoint startx="389" starty="515" />
       <endpoint endx="387" endy="577" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="27" usesdiagramusefillcolour="1" x="391" linecolour="none" y="517" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="38" text="1..*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="374" linecolour="none" y="556" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="38" text="*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="28" widgetaid="31" xmi.id="39" >
      <linepath>
       <startpoint startx="557" starty="419" />
       <endpoint endx="439" endy="419" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="29" widgetaid="32" xmi.id="40" >
      <linepath>
       <startpoint startx="559" starty="500" />
       <endpoint endx="445" endy="500" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="30" widgetaid="33" xmi.id="41" >
      <linepath>
       <startpoint startx="557" starty="591" />
       <endpoint endx="432" endy="591" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="98" widgetaid="27" roleBdoc="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="322" starty="318" />
       <endpoint endx="277" endy="307" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="99" widgetaid="28" roleBdoc="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="337" starty="419" />
       <endpoint endx="275" endy="409" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="100" widgetaid="29" roleBdoc="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="333" starty="500" />
       <endpoint endx="275" endy="510" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="101" widgetaid="30" roleBdoc="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="342" starty="591" />
       <endpoint endx="276" endy="597" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="124" widgetaid="106" roleBdoc="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="391" starty="163" />
       <endpoint endx="516" endy="125" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="106" widgetaid="27" xmi.id="156" >
      <linepath>
       <startpoint startx="390" starty="285" />
       <endpoint endx="391" endy="230" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="28" widgetaid="342" roleBdoc="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="615" starty="274" />
       <endpoint endx="405" endy="405" />
      </linepath>
     </UML:AssocWidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" zoom="81" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1000" snapy="10" showatts="1" xmi.id="43" documentation="" type="402" showops="1" showpackage="0" name="Ideen-Sammelbecken-Klassenmodell" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="762" >
    <widgets>
     <UML:ClassWidget usesdiagramfillcolour="1" width="101" showattsigs="601" usesdiagramusefillcolour="1" x="492" linecolour="none" y="489" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="31" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="60" showattsigs="601" usesdiagramusefillcolour="1" x="504" linecolour="none" y="582" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="32" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="131" showattsigs="601" usesdiagramusefillcolour="1" x="495" linecolour="none" y="669" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="33" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="147" showattsigs="601" usesdiagramusefillcolour="0" x="486" linecolour="#ff0000" y="369" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="67" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="106" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="137" showattsigs="601" usesdiagramusefillcolour="0" x="257" linecolour="#ff0000" y="369" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="67" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="27" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="102" showattsigs="601" usesdiagramusefillcolour="0" x="272" linecolour="#ff0000" y="489" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="28" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="112" showattsigs="601" usesdiagramusefillcolour="1" x="269" linecolour="none" y="582" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="29" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="90" showattsigs="601" usesdiagramusefillcolour="1" x="275" linecolour="none" y="669" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="30" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="93" showattsigs="601" usesdiagramusefillcolour="0" x="279" linecolour="#000000" y="289" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ff0000" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="271" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="315" usesdiagramusefillcolour="1" x="110" linecolour="none" y="104" instancename="" usesdiagramlinecolour="1" fillcolour="#c6ffba" height="105" usefillcolor="1" isinstance="0" xmi.id="272" text="Aufgaben des Laufzeitsystems:
- Handling von Wissenspaketen und deren Inhalten
- Sprachverwaltung
- Interaktion mit dem Benutzer
- Benutzerverwaltung
- Laden und Entladen von Plugins
" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="60" showattsigs="601" usesdiagramusefillcolour="1" x="737" linecolour="none" y="30" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="273" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="126" showattsigs="601" usesdiagramusefillcolour="1" x="679" linecolour="none" y="68" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="274" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="72" showattsigs="601" usesdiagramusefillcolour="0" x="736" linecolour="#ff0000" y="108" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="275" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="107" showattsigs="601" usesdiagramusefillcolour="1" x="700" linecolour="none" y="146" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="276" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="113" showattsigs="601" usesdiagramusefillcolour="0" x="696" linecolour="#ff0000" y="183" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="277" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <boxwidget usesdiagramfillcolour="1" width="297" usesdiagramusefillcolour="1" x="671" linecolour="none" y="26" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="243" usefillcolor="1" isinstance="0" xmi.id="278" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="135" usesdiagramusefillcolour="1" x="822" linecolour="none" y="68" instancename="" usesdiagramlinecolour="1" fillcolour="#c6ffba" height="161" usefillcolor="1" isinstance="0" xmi.id="279" text="Mögliche Kontrollklassen, die
das Laufzeitsystem irgendwie
verwendet. Vorläufig nur als
Ideensammlung." font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="0" width="96" usesdiagramusefillcolour="0" x="43" linecolour="#ff0000" y="482" drawascircle="0" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="37" usefillcolor="1" isinstance="0" xmi.id="280" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,1,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="50" usesdiagramusefillcolour="1" x="157" linecolour="none" y="432" instancename="" usesdiagramlinecolour="1" fillcolour="#c6ffba" height="181" usefillcolor="1" isinstance="0" xmi.id="285" text="???
???
???
???
???
???
???
???
???
???
???
" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="139" showattsigs="601" usesdiagramusefillcolour="0" x="677" linecolour="#ff0000" y="226" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="286" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="153" usesdiagramusefillcolour="1" x="18" linecolour="none" y="289" instancename="" usesdiagramlinecolour="1" fillcolour="#c6ffba" height="109" usefillcolor="1" isinstance="0" xmi.id="287" text="Irgendeine Ressource, ggf. über einen URI oder als Datenbankaufruf spezifizierbar. Auch lokale Dateien." font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <datatypewidget usesdiagramfillcolour="0" width="109" usesdiagramusefillcolour="0" x="756" linecolour="#ff0000" y="332" instancename="" usesdiagramlinecolour="0" fillcolour="#add9ff" height="30" usefillcolor="1" isinstance="0" xmi.id="290" font="Sans Serif,10,-1,5,75,1,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="28" widgetaid="27" xmi.id="36" >
      <linepath>
       <startpoint startx="325" starty="436" />
       <endpoint endx="323" endy="489" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="14" usesdiagramusefillcolour="1" x="327" linecolour="none" y="438" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="36" text="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="310" linecolour="none" y="468" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="36" text="*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="29" widgetaid="28" xmi.id="37" >
      <linepath>
       <startpoint startx="323" starty="518" />
       <endpoint endx="306" endy="582" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="14" usesdiagramusefillcolour="1" x="235" linecolour="none" y="543" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="37" text="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="407" linecolour="none" y="542" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="37" text="*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="30" widgetaid="29" xmi.id="38" >
      <linepath>
       <startpoint startx="325" starty="611" />
       <endpoint endx="305" endy="669" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="27" usesdiagramusefillcolour="1" x="358" linecolour="none" y="613" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="38" text="1..*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="307" linecolour="none" y="648" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="38" text="*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="28" widgetaid="31" xmi.id="39" >
      <linepath>
       <startpoint startx="492" starty="503" />
       <endpoint endx="374" endy="503" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="29" widgetaid="32" xmi.id="40" >
      <linepath>
       <startpoint startx="504" starty="596" />
       <endpoint endx="381" endy="596" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="30" widgetaid="33" xmi.id="41" >
      <linepath>
       <startpoint startx="495" starty="683" />
       <endpoint endx="365" endy="683" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="106" widgetaid="27" xmi.id="156" >
      <linepath>
       <startpoint startx="394" starty="402" />
       <endpoint endx="486" endy="402" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="27" widgetaid="271" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="325" starty="318" />
       <endpoint endx="325" endy="369" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="7" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="272" widgetaid="271" roleBdoc="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="292" starty="289" />
       <endpoint endx="267" endy="209" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="7" indexa="6" visibilityB="200" totalcountb="2" indexb="1" widgetbid="273" widgetaid="271" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="358" starty="289" />
       <endpoint endx="767" endy="59" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="7" indexa="2" visibilityB="200" totalcountb="2" indexb="1" widgetbid="274" widgetaid="271" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="305" starty="289" />
       <endpoint endx="742" endy="97" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="7" indexa="5" visibilityB="200" totalcountb="2" indexb="1" widgetbid="275" widgetaid="271" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="345" starty="289" />
       <endpoint endx="736" endy="122" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="7" indexa="4" visibilityB="200" totalcountb="2" indexb="1" widgetbid="276" widgetaid="271" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="332" starty="289" />
       <endpoint endx="700" endy="160" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="7" indexa="3" visibilityB="200" totalcountb="2" indexb="1" widgetbid="277" widgetaid="271" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="318" starty="289" />
       <endpoint endx="696" endy="197" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="280" widgetaid="30" xmi.id="281" >
      <linepath>
       <startpoint startx="335" starty="669" />
       <endpoint endx="107" endy="519" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="280" widgetaid="27" xmi.id="282" >
      <linepath>
       <startpoint startx="257" starty="402" />
       <endpoint endx="75" endy="482" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="280" widgetaid="28" xmi.id="283" >
      <linepath>
       <startpoint startx="272" starty="503" />
       <endpoint endx="139" endy="500" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" totalcountb="3" indexb="1" widgetbid="280" widgetaid="29" xmi.id="284" >
      <linepath>
       <startpoint startx="343" starty="582" />
       <endpoint endx="75" endy="519" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="286" widgetaid="271" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="372" starty="298" />
       <endpoint endx="677" endy="240" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" widgetbid="287" widgetaid="280" roleBdoc="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="107" starty="482" />
       <endpoint endx="94" endy="398" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" widgetbid="290" widgetaid="271" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="372" starty="308" />
       <endpoint endx="756" endy="347" />
      </linepath>
     </UML:AssocWidget>
    </associations>
   </diagram>
   <diagram snapgrid="1" showattsig="1" fillcolor="#ffffc0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="810" snapy="10" showatts="1" xmi.id="44" documentation="" type="406" showops="1" showpackage="0" name="Komponenten-Uebersicht" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="617" >
    <widgets>
     <componentwidget usesdiagramfillcolour="0" width="182" usesdiagramusefillcolour="0" x="30" linecolour="#ff0000" y="190" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="60" usefillcolor="1" isinstance="0" xmi.id="46" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <componentwidget usesdiagramfillcolour="0" width="144" usesdiagramusefillcolour="0" x="430" linecolour="#ff0000" y="190" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="60" usefillcolor="1" isinstance="0" xmi.id="47" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <componentwidget usesdiagramfillcolour="0" width="118" usesdiagramusefillcolour="0" x="320" linecolour="#ff0000" y="350" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="60" usefillcolor="1" isinstance="0" xmi.id="48" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <componentwidget usesdiagramfillcolour="0" width="118" usesdiagramusefillcolour="0" x="320" linecolour="#ff0000" y="30" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="60" usefillcolor="1" isinstance="0" xmi.id="49" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="218" usesdiagramusefillcolour="1" x="540" linecolour="#000000" y="260" instancename="" usesdiagramlinecolour="0" fillcolour="#c9daff" height="145" usefillcolor="1" isinstance="0" xmi.id="77" text="Der Gnogito-Kern ist selbst ein Eclipse-Plugin. Er definiert seinerseits Erweiterungspunkte für weitere Gnogito-Komponenten, die ihrerseits ebenfalls Eclipse-Plugins sind, aber zusätzlich eine Schnittstelle zum Gnogito-Kern verwenden." font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="121" usesdiagramusefillcolour="1" x="220" linecolour="none" y="190" instancename="" usesdiagramlinecolour="1" fillcolour="#c6ffba" height="58" usefillcolor="1" isinstance="0" xmi.id="78" text="Eclipse Plugin-Schnittstelle" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="121" usesdiagramusefillcolour="1" x="380" linecolour="none" y="110" instancename="" usesdiagramlinecolour="1" fillcolour="#c6ffba" height="58" usefillcolor="1" isinstance="0" xmi.id="79" text="Gnogito Kern-Schnittstelle" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="154" usesdiagramusefillcolour="1" x="290" linecolour="#000000" y="450" instancename="" usesdiagramlinecolour="0" fillcolour="#c9daff" height="108" usefillcolor="1" isinstance="0" xmi.id="80" text="Beispiele für Plugins sind:
- Begriffsstruktur
- Grafikkomponente
- Karteikartenset
usw." font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="121" usesdiagramusefillcolour="1" x="380" linecolour="none" y="270" instancename="" usesdiagramlinecolour="1" fillcolour="#c6ffba" height="58" usefillcolor="1" isinstance="0" xmi.id="81" text="Gnogito Kern-Schnittstelle" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="46" widgetaid="47" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="430" starty="220" />
       <endpoint endx="212" endy="220" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="360" linecolour="none" y="280" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="355" text="" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="420" linecolour="none" y="230" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="356" text="" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="210" linecolour="none" y="140" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="357" text="" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="46" widgetaid="48" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="359" starty="350" />
       <endpoint endx="121" endy="250" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="46" widgetaid="49" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="320" starty="60" />
       <endpoint endx="121" endy="190" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" widgetbid="47" widgetaid="48" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="398" starty="350" />
       <endpoint endx="502" endy="250" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="870" linecolour="none" y="790" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="358" text="" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="340" linecolour="none" y="350" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="359" text="" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="500" linecolour="none" y="230" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="360" text="" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="47" widgetaid="49" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="379" starty="90" />
       <endpoint endx="502" endy="190" />
      </linepath>
     </UML:AssocWidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" zoom="81" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1000" snapy="10" showatts="1" xmi.id="210" documentation="" type="402" showops="1" showpackage="0" name="Analyse-Klassenmodell" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="762" >
    <widgets/>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" zoom="64" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="1241" snapy="10" showatts="1" xmi.id="368" documentation="Das Domänen-Klassenmodell beschreibt nur die Gegenstände des Problembereichs ohne jegliche Realisierungsaspekte. Auch Operationen werden hier ausgespart." type="402" showops="1" showpackage="0" name="Domänen-Klassenmodell" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="939" >
    <widgets>
     <UML:ClassWidget usesdiagramfillcolour="1" width="101" showattsigs="601" usesdiagramusefillcolour="1" x="154" linecolour="none" y="440" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="31" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="60" showattsigs="601" usesdiagramusefillcolour="1" x="174" linecolour="none" y="544" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="32" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="131" showattsigs="601" usesdiagramusefillcolour="1" x="129" linecolour="none" y="765" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="33" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="147" showattsigs="601" usesdiagramusefillcolour="0" x="143" linecolour="#ff0000" y="270" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="67" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="106" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="137" showattsigs="601" usesdiagramusefillcolour="0" x="371" linecolour="#ff0000" y="270" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="67" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="27" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="102" showattsigs="601" usesdiagramusefillcolour="0" x="368" linecolour="#ff0000" y="444" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="28" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="112" showattsigs="601" usesdiagramusefillcolour="1" x="378" linecolour="none" y="544" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="29" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="90" showattsigs="601" usesdiagramusefillcolour="1" x="405" linecolour="none" y="765" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="30" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="92" showattsigs="601" usesdiagramusefillcolour="1" x="703" linecolour="none" y="461" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="381" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="96" usesdiagramusefillcolour="1" x="543" linecolour="none" y="455" drawascircle="0" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="37" usefillcolor="1" isinstance="0" xmi.id="382" showoperations="1" showpackage="0" showscope="1" font="Sans Serif,10,-1,5,75,1,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="89" showattsigs="601" usesdiagramusefillcolour="1" x="829" linecolour="none" y="290" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="389" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="61" showattsigs="601" usesdiagramusefillcolour="1" x="850" linecolour="none" y="461" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="390" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="68" showattsigs="601" usesdiagramusefillcolour="1" x="448" linecolour="none" y="161" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="391" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="88" showattsigs="601" usesdiagramusefillcolour="1" x="828" linecolour="none" y="541" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="392" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="85" showattsigs="601" usesdiagramusefillcolour="1" x="553" linecolour="none" y="161" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="393" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="106" usesdiagramusefillcolour="1" x="821" linecolour="none" y="153" instancename="" usesdiagramlinecolour="1" fillcolour="#c6ffba" height="91" usefillcolor="1" isinstance="0" xmi.id="396" text="Das Gesamtwissen ist nur ein &quot;besonderes&quot; Wissenspaket." font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="67" showattsigs="601" usesdiagramusefillcolour="1" x="214" linecolour="none" y="684" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="1" isinstance="0" xmi.id="220" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="28" widgetaid="27" xmi.id="36" >
      <linepath>
       <startpoint startx="417" starty="337" />
       <endpoint endx="419" endy="444" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="14" usesdiagramusefillcolour="1" x="401" linecolour="none" y="339" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="36" text="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="421" linecolour="none" y="423" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="36" text="*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="29" widgetaid="28" xmi.id="37" >
      <linepath>
       <startpoint startx="419" starty="473" />
       <endpoint endx="415" endy="544" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="14" usesdiagramusefillcolour="1" x="421" linecolour="none" y="475" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="37" text="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="402" linecolour="none" y="523" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="37" text="*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="4" indexb="2" widgetbid="30" widgetaid="29" xmi.id="38" >
      <linepath>
       <startpoint startx="434" starty="573" />
       <endpoint endx="450" endy="765" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="27" usesdiagramusefillcolour="1" x="405" linecolour="none" y="575" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="38" text="1..*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="452" linecolour="none" y="744" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="38" text="*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="28" widgetaid="31" xmi.id="39" >
      <linepath>
       <startpoint startx="255" starty="454" />
       <endpoint endx="368" endy="458" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="29" widgetaid="32" xmi.id="40" >
      <linepath>
       <startpoint startx="234" starty="558" />
       <endpoint endx="378" endy="558" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="30" widgetaid="33" xmi.id="41" >
      <linepath>
       <startpoint startx="260" starty="779" />
       <endpoint endx="405" endy="779" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="106" widgetaid="27" xmi.id="156" >
      <linepath>
       <startpoint startx="372" starty="303" />
       <endpoint endx="290" endy="303" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="32" widgetaid="31" xmi.id="379" >
      <linepath>
       <startpoint startx="204" starty="469" />
       <endpoint endx="204" endy="544" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="14" usesdiagramusefillcolour="1" x="206" linecolour="none" y="471" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="379" text="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="206" linecolour="none" y="523" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="379" text="*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="33" widgetaid="32" xmi.id="380" >
      <linepath>
       <startpoint startx="194" starty="573" />
       <endpoint endx="194" endy="765" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="27" usesdiagramusefillcolour="1" x="196" linecolour="none" y="575" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="380" text="1..*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="196" linecolour="none" y="744" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="380" text="*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="382" widgetaid="28" xmi.id="383" >
      <linepath>
       <startpoint startx="470" starty="458" />
       <endpoint endx="543" endy="467" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" totalcountb="3" indexb="2" widgetbid="382" widgetaid="29" xmi.id="384" >
      <linepath>
       <startpoint startx="452" starty="544" />
       <endpoint endx="543" endy="479" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="4" indexa="3" totalcountb="2" indexb="1" widgetbid="382" widgetaid="30" xmi.id="385" >
      <linepath>
       <startpoint startx="472" starty="765" />
       <endpoint endx="591" endy="492" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="382" widgetaid="27" xmi.id="386" >
      <linepath>
       <startpoint startx="463" starty="337" />
       <endpoint endx="591" endy="455" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="382" widgetaid="381" xmi.id="388" >
      <linepath>
       <startpoint startx="703" starty="475" />
       <endpoint endx="639" endy="473" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="671" linecolour="none" y="474" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="382" text="" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="14" usesdiagramusefillcolour="1" x="687" linecolour="none" y="477" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="388" text="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="15" usesdiagramusefillcolour="1" x="641" linecolour="none" y="452" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="388" text="*" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="16" usesdiagramusefillcolour="1" x="685" linecolour="none" y="454" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="19" usefillcolor="1" pretext="+" isinstance="0" xmi.id="388" text="" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="16" usesdiagramusefillcolour="1" x="641" linecolour="none" y="475" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="19" usefillcolor="1" pretext="+" isinstance="0" xmi.id="388" text="" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="389" widgetaid="390" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="880" starty="461" />
       <endpoint endx="873" endy="319" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="882" linecolour="none" y="440" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="-1" text="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="867" linecolour="none" y="321" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="-1" text="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="381" widgetaid="390" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="850" starty="475" />
       <endpoint endx="795" endy="475" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="840" linecolour="none" y="454" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="-1" text="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="797" linecolour="none" y="454" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="19" usefillcolor="1" pretext="" isinstance="0" xmi.id="-1" text="1" font="Sans Serif,10,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="27" widgetaid="389" xmi.id="395" >
      <linepath>
       <startpoint startx="829" starty="304" />
       <endpoint endx="509" endy="303" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="389" widgetaid="396" roleBdoc="" roleAdoc="" type="513" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="874" starty="244" />
       <endpoint endx="873" endy="290" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="220" widgetaid="32" xmi.id="397" >
      <linepath>
       <startpoint startx="214" starty="573" />
       <endpoint endx="247" endy="684" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="4" indexb="1" widgetbid="30" widgetaid="220" xmi.id="398" >
      <linepath>
       <startpoint startx="281" starty="698" />
       <endpoint endx="427" endy="765" />
      </linepath>
     </UML:AssocWidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" id="-1" label="Ansichten" >
    <listitem open="1" type="801" id="-1" label="Logische Ansicht" >
     <listitem open="0" type="807" id="210" label="Analyse-Klassenmodell" />
     <listitem open="0" type="807" id="368" label="Domänen-Klassenmodell" />
     <listitem open="0" type="807" id="43" label="Ideen-Sammelbecken-Klassenmodell" />
     <listitem open="0" type="807" id="26" label="Wissensmodell" />
     <listitem open="1" type="813" id="32" label="Begriff" />
     <listitem open="1" type="813" id="33" label="Begriffsbeschreibung" />
     <listitem open="1" type="813" id="31" label="Begriffsstruktur" />
     <listitem open="1" type="813" id="390" label="Benutzer" />
     <listitem open="1" type="813" id="274" label="Benutzerverwaltung" />
     <listitem open="1" type="813" id="220" label="Diagramm" />
     <listitem open="1" type="813" id="392" label="Gemeinschaft" />
     <listitem open="1" type="813" id="389" label="Gesamtwissen" />
     <listitem open="1" type="813" id="273" label="I18n" />
     <listitem open="1" type="813" id="271" label="Laufzeitsystem" />
     <listitem open="1" type="813" id="381" label="Lernprogramm" />
     <listitem open="1" type="813" id="393" label="Lernstrategie" />
     <listitem open="0" type="813" id="106" label="Metainformation" >
      <listitem open="0" type="814" id="109" label="historie" />
      <listitem open="0" type="814" id="108" label="kategorien" />
      <listitem open="0" type="814" id="110" label="schluesselworte" />
     </listitem>
     <listitem open="1" type="813" id="277" label="Pluginverwaltung" />
     <listitem open="1" type="813" id="391" label="Repository" />
     <listitem open="1" type="813" id="286" label="Ressourcenverwaltung" />
     <listitem open="1" type="813" id="276" label="Sitzungskontrolle" />
     <listitem open="1" type="813" id="29" label="Wissensbehaelter" />
     <listitem open="1" type="813" id="30" label="Wissensobjekt" />
     <listitem open="0" type="813" id="27" label="Wissenspaket" >
      <listitem open="0" type="814" id="104" label="beschreibung" />
      <listitem open="0" type="814" id="103" label="name" />
      <listitem open="0" type="814" id="102" label="reifegrad" />
     </listitem>
     <listitem open="1" type="813" id="28" label="Wissensstruktur" />
     <listitem open="1" type="813" id="275" label="XMLparser" />
     <listitem open="1" type="817" id="382" label="Lernbar" />
     <listitem open="1" type="817" id="280" label="Ressource" />
     <listitem open="0" type="830" id="-1" label="Datentypen" >
      <listitem open="1" type="829" id="290" label="IrgendeinPlugin" />
      <listitem open="1" type="829" id="4" label="bool" />
      <listitem open="1" type="829" id="3" label="char" />
      <listitem open="1" type="829" id="6" label="double" />
      <listitem open="1" type="829" id="5" label="float" />
      <listitem open="1" type="829" id="2" label="int" />
      <listitem open="1" type="829" id="7" label="long" />
      <listitem open="1" type="829" id="8" label="short" />
      <listitem open="1" type="829" id="9" label="string" />
     </listitem>
    </listitem>
    <listitem open="0" type="802" id="-1" label="Anwendungsfallansicht" >
     <listitem open="0" type="805" id="17" label="Editierer-Anwendungsfall" />
     <listitem open="0" type="805" id="12" label="Lerner-Anwendungsfaelle" />
     <listitem open="1" type="811" id="11" label="Editierer" />
     <listitem open="1" type="811" id="10" label="Lerner" />
     <listitem open="1" type="812" id="20" label="Begriff erzeugen" />
     <listitem open="1" type="812" id="24" label="Begriff kopieren" />
     <listitem open="1" type="812" id="22" label="Begriff löschen" />
     <listitem open="1" type="812" id="23" label="Begriffsbeschreibung editieren" />
     <listitem open="1" type="812" id="25" label="Begriffsposition ändern" />
     <listitem open="1" type="812" id="21" label="Begriffsreferenz erzeugen" />
     <listitem open="1" type="812" id="16" label="Inhalte lernen" />
     <listitem open="1" type="812" id="15" label="Lerninformation zu einer Begriffsbeschreibung erzeugen" />
     <listitem open="1" type="812" id="18" label="Wissenspaket erzeugen" />
     <listitem open="1" type="812" id="13" label="Wissenspaket laden" />
     <listitem open="1" type="812" id="14" label="Wissenspaket speichern" />
     <listitem open="1" type="812" id="19" label="Wissensstruktur erzeugen" />
    </listitem>
    <listitem open="0" type="821" id="-1" label="Komponentenansicht" >
     <listitem open="0" type="819" id="44" label="Komponenten-Uebersicht" />
     <listitem open="1" type="822" id="47" label="GnogitokernKo" />
     <listitem open="1" type="822" id="48" label="Plugin1Ko" />
     <listitem open="1" type="822" id="49" label="Plugin2Ko" />
     <listitem open="1" type="822" id="46" label="RichClientPlatformKo" />
    </listitem>
    <listitem open="1" type="827" id="-1" label="Verteilungsansicht" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Java" >
    <classifiercodedocument writeOutCode="true" package="" id="27" parent_class="27" fileExt=".java" fileName="Wissenspaket" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="import java.util.*;&amp;#010;import Lernbar;&amp;#010;import string;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="27" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Wissenspaket&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="103" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text="public string name;" >
           <header>
            <codecomment tag="" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="104" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text="public string beschreibung;" >
           <header>
            <codecomment tag="" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="102" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text="public string reifegrad;" >
           <header>
            <codecomment tag="" indentLevel="1" text="Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten." />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="36" tag="tblock_3" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="156" tag="tblock_4" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public Metainformation  = new Metainformation ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Wissenspaket ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="103" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="103" role_id="-1" text="return name;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of name&amp;#010;&amp;#010;@return the value of name" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="103" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="103" role_id="-1" text="name = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of name&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="104" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="104" role_id="-1" text="return beschreibung;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of beschreibung&amp;#010;&amp;#010;@return the value of beschreibung" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="104" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="104" role_id="-1" text="beschreibung = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of beschreibung&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="102" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="102" role_id="-1" text="return reifegrad;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten." />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="102" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="102" role_id="-1" text="reifegrad = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten." />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="36" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" text="return Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="36" tag="hblock_tag_11" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" text="Vector = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="36" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" text="Vector.add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissensstruktur to the List Vector&amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="36" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" text="Vector.remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissensstruktur from the List Vector&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="36" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" text="return (List) Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="156" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="156" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="156" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Metainformation to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="156" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" text=".remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Metainformation from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="156" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Wissenspaket.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="103" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="103" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text="public string name;" >
        <header>
         <codecomment tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="103" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="103" role_id="-1" text="return name;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of name&amp;#010;&amp;#010;@return the value of name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="103" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="103" role_id="-1" text="name = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of name&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="104" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="104" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text="public string beschreibung;" >
        <header>
         <codecomment tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="104" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="104" role_id="-1" text="return beschreibung;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of beschreibung&amp;#010;&amp;#010;@return the value of beschreibung" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="104" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="104" role_id="-1" text="beschreibung = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of beschreibung&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="102" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" text="Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten." />
       </header>
       <ccfdeclarationcodeblock parent_id="102" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text="public string reifegrad;" >
        <header>
         <codecomment tag="" indentLevel="1" text="Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="102" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="102" role_id="-1" text="return reifegrad;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten." />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="102" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="102" role_id="-1" text="reifegrad = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten." />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="36" field_type="3" initialValue=" new Vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="36" tag="tblock_3" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="36" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" text="return Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="36" tag="hblock_tag_11" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" text="Vector = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="36" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" text="Vector.add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissensstruktur to the List Vector&amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="36" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" text="Vector.remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissensstruktur from the List Vector&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="36" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" text="return (List) Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="156" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="156" tag="tblock_4" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public Metainformation  = new Metainformation ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="156" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="156" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="156" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Metainformation to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="156" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Metainformation from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="156" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="28" parent_class="28" fileExt=".java" fileName="Wissensstruktur" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="import java.util.*;&amp;#010;import Lernbar;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="28" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Wissensstruktur&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="36" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Wissenspaket  = new Wissenspaket ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="37" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Wissensstruktur ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="36" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="36" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="36" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissenspaket to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="36" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" text="if (.size() >= 1) {&amp;#010;  .remove(value);&amp;#010;} else {&amp;#010;  System.err.println(&quot;ERROR: Cant removeWissenspaket from , minimum number of items reached.&quot;);&amp;#010;}&amp;#010;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissenspaket from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="36" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" text="return Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" text="Vector = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" text="Vector.add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissensbehaelter to the List Vector&amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" text="Vector.remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissensbehaelter from the List Vector&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" text="return (List) Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Wissensstruktur.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="36" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="36" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Wissenspaket  = new Wissenspaket ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="36" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="36" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="36" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissenspaket to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="36" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" text="if (.size() >= 1) {&amp;#010;  .remove(value);&amp;#010;} else {&amp;#010;  System.err.println(&quot;ERROR: Cant removeWissenspaket from , minimum number of items reached.&quot;);&amp;#010;}&amp;#010;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissenspaket from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="36" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="37" field_type="3" initialValue=" new Vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="37" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" text="return Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" text="Vector = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" text="Vector.add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissensbehaelter to the List Vector&amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" text="Vector.remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissensbehaelter from the List Vector&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" text="return (List) Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="29" parent_class="29" fileExt=".java" fileName="Wissensbehaelter" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="import java.util.*;&amp;#010;import Lernbar;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="29" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Wissensbehaelter&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="37" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Wissensstruktur  = new Wissensstruktur ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="38" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Wissensbehaelter ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissensstruktur to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" text="if (.size() >= 1) {&amp;#010;  .remove(value);&amp;#010;} else {&amp;#010;  System.err.println(&quot;ERROR: Cant removeWissensstruktur from , minimum number of items reached.&quot;);&amp;#010;}&amp;#010;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissensstruktur from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="38" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" text="return Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="38" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" text="Vector = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="38" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" text="Vector.add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissensobjekt to the List Vector&amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="38" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" text="Vector.remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissensobjekt from the List Vector&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="38" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" text="return (List) Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Wissensbehaelter.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="37" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="37" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Wissensstruktur  = new Wissensstruktur ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissensstruktur to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" text="if (.size() >= 1) {&amp;#010;  .remove(value);&amp;#010;} else {&amp;#010;  System.err.println(&quot;ERROR: Cant removeWissensstruktur from , minimum number of items reached.&quot;);&amp;#010;}&amp;#010;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissensstruktur from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="38" field_type="3" initialValue=" new Vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="38" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="38" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" text="return Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="38" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" text="Vector = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="38" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" text="Vector.add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissensobjekt to the List Vector&amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="38" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" text="Vector.remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissensobjekt from the List Vector&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="38" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" text="return (List) Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="30" parent_class="30" fileExt=".java" fileName="Wissensobjekt" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="import java.util.*;&amp;#010;import Lernbar;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="30" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Wissensobjekt&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="38" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public List Vector =  new Vector( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Wissensobjekt ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="38" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" text="return Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="38" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" text="Vector = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="38" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" text="Vector.add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissensbehaelter to the List Vector&amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="38" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" text="Vector.remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissensbehaelter from the List Vector&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="38" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" text="return (List) Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Wissensobjekt.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:21:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="38" field_type="3" initialValue=" new Vector( )" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="38" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public List Vector =  new Vector( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="38" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" text="return Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="38" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" text="Vector = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="38" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" text="Vector.add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissensbehaelter to the List Vector&amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="38" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" text="Vector.remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissensbehaelter from the List Vector&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="38" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" text="return (List) Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="398" field_type="6815860" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Diagramm  = new Diagramm ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Diagramm to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="1" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Diagramm from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="31" parent_class="31" fileExt=".java" fileName="Begriffsstruktur" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="import java.util.*;&amp;#010;import Wissensstruktur;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="31" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Begriffsstruktur&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="379" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Begriffsstruktur ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="379" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" text="return Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="379" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" text="Vector = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="379" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" text="Vector.add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Begriff to the List Vector&amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="379" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" text="Vector.remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Begriff from the List Vector&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="379" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" text="return (List) Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Begriffsstruktur.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:22:18&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="379" field_type="3" initialValue=" new Vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="379" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="379" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" text="return Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="379" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" text="Vector = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="379" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" text="Vector.add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Begriff to the List Vector&amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="379" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" text="Vector.remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Begriff from the List Vector&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="379" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" text="return (List) Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="32" parent_class="32" fileExt=".java" fileName="Begriff" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="import java.util.*;&amp;#010;import Wissensbehaelter;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="32" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Begriff&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="379" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Begriffsstruktur  = new Begriffsstruktur ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="380" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="397" tag="tblock_11" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public Diagramm  = new Diagramm ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Begriff ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="379" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="379" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="379" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Begriffsstruktur to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="379" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" text="if (.size() >= 1) {&amp;#010;  .remove(value);&amp;#010;} else {&amp;#010;  System.err.println(&quot;ERROR: Cant removeBegriffsstruktur from , minimum number of items reached.&quot;);&amp;#010;}&amp;#010;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Begriffsstruktur from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="379" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="380" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text="return Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="380" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text="Vector = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="380" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text="Vector.add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Begriffsbeschreibung to the List Vector&amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="380" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text="Vector.remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Begriffsbeschreibung from the List Vector&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="380" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text="return (List) Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="397" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="397" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="397" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Diagramm to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="397" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" text=".remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Diagramm from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="397" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Begriff.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:20:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="379" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="379" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Begriffsstruktur  = new Begriffsstruktur ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="379" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="379" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="379" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Begriffsstruktur to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="379" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" text="if (.size() >= 1) {&amp;#010;  .remove(value);&amp;#010;} else {&amp;#010;  System.err.println(&quot;ERROR: Cant removeBegriffsstruktur from , minimum number of items reached.&quot;);&amp;#010;}&amp;#010;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Begriffsstruktur from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="379" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="380" field_type="3" initialValue=" new Vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="380" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="380" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text="return Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="380" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text="Vector = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="380" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text="Vector.add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Begriffsbeschreibung to the List Vector&amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="380" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text="Vector.remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Begriffsbeschreibung from the List Vector&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="380" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" text="return (List) Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="397" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="397" tag="tblock_11" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public Diagramm  = new Diagramm ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="397" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="397" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="397" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Diagramm to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="397" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Diagramm from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="397" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="33" parent_class="33" fileExt=".java" fileName="Begriffsbeschreibung" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="import java.util.*;&amp;#010;import Wissensobjekt;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="33" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Begriffsbeschreibung&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="380" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public List Vector =  new Vector( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Begriffsbeschreibung ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="380" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" text="return Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="380" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" text="Vector = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="380" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" text="Vector.add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Begriff to the List Vector&amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="380" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" text="Vector.remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Begriff from the List Vector&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="380" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" text="return (List) Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Begriffsbeschreibung.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:20:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="380" field_type="3" initialValue=" new Vector( )" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="380" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public List Vector =  new Vector( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="380" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" text="return Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="380" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" text="Vector = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="380" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" text="Vector.add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Begriff to the List Vector&amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="380" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" text="Vector.remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Begriff from the List Vector&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="380" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" text="return (List) Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="106" parent_class="106" fileExt=".java" fileName="Metainformation" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import string;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="106" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Metainformation&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="108" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text="public string kategorien;" >
           <header>
            <codecomment tag="" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="110" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text="public string schluesselworte;" >
           <header>
            <codecomment tag="" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="109" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text="public string historie;" >
           <header>
            <codecomment tag="" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
          <ccfdeclarationcodeblock parent_id="156" tag="tblock_3" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Wissenspaket  = new Wissenspaket ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Metainformation ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="108" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="108" role_id="-1" text="return kategorien;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of kategorien&amp;#010;&amp;#010;@return the value of kategorien" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="108" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="108" role_id="-1" text="kategorien = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of kategorien&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="110" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="110" role_id="-1" text="return schluesselworte;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of schluesselworte&amp;#010;&amp;#010;@return the value of schluesselworte" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="110" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="110" role_id="-1" text="schluesselworte = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of schluesselworte&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="0" parent_id="109" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="109" role_id="-1" text="return historie;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of historie&amp;#010;&amp;#010;@return the value of historie" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="109" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="109" role_id="-1" text="historie = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of historie&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="156" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="156" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="156" tag="hblock_tag_11" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissenspaket to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="156" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" text=".remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissenspaket from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="156" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Metainformation.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:15:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="108" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="108" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text="public string kategorien;" >
        <header>
         <codecomment tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="108" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="108" role_id="-1" text="return kategorien;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of kategorien&amp;#010;&amp;#010;@return the value of kategorien" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="108" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="108" role_id="-1" text="kategorien = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of kategorien&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="110" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="110" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text="public string schluesselworte;" >
        <header>
         <codecomment tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="110" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="110" role_id="-1" text="return schluesselworte;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of schluesselworte&amp;#010;&amp;#010;@return the value of schluesselworte" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="110" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="110" role_id="-1" text="schluesselworte = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of schluesselworte&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="109" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="109" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text="public string historie;" >
        <header>
         <codecomment tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="109" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="109" role_id="-1" text="return historie;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of historie&amp;#010;&amp;#010;@return the value of historie" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="109" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="109" role_id="-1" text="historie = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of historie&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="156" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="156" tag="tblock_3" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Wissenspaket  = new Wissenspaket ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="156" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="156" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="156" tag="hblock_tag_11" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissenspaket to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="156" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissenspaket from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="156" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="220" parent_class="220" fileExt=".java" fileName="Diagramm" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import Wissensobjekt;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="220" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Diagramm&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="397" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Begriff  = new Begriff ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Diagramm ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="397" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="397" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="397" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Begriff to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="397" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" text=".remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Begriff from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="397" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Diagramm.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:21:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="397" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="397" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Begriff  = new Begriff ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="397" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="397" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="397" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Begriff to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="397" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Begriff from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="397" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="398" field_type="2097192" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public Wissensobjekt  = new Wissensobjekt ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="0" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="0" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="0" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Wissensobjekt to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="0" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Wissensobjekt from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="0" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="271" parent_class="271" fileExt=".java" fileName="Laufzeitsystem" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="271" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Laufzeitsystem&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Laufzeitsystem ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Laufzeitsystem.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="273" parent_class="273" fileExt=".java" fileName="I18n" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="273" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class I18n&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public I18n ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			I18n.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="274" parent_class="274" fileExt=".java" fileName="Benutzerverwaltung" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="274" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Benutzerverwaltung&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Benutzerverwaltung ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Benutzerverwaltung.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="275" parent_class="275" fileExt=".java" fileName="XMLparser" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="275" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class XMLparser&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public XMLparser ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			XMLparser.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="276" parent_class="276" fileExt=".java" fileName="Sitzungskontrolle" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="276" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Sitzungskontrolle&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Sitzungskontrolle ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Sitzungskontrolle.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="277" parent_class="277" fileExt=".java" fileName="Pluginverwaltung" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="277" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Pluginverwaltung&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Pluginverwaltung ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Pluginverwaltung.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="280" parent_class="280" fileExt=".java" fileName="Ressource" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="280" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface Ressource&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Ressource ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Ressource.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="286" parent_class="286" fileExt=".java" fileName="Ressourcenverwaltung" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="286" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Ressourcenverwaltung&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Ressourcenverwaltung ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Ressourcenverwaltung.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="381" parent_class="381" fileExt=".java" fileName="Lernprogramm" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="import java.util.*;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="381" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Lernprogramm&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="388" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Lernprogramm ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="388" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" text="return Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="388" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" text="Vector = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="388" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" text="Vector.add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Lernbar to the List Vector&amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="388" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" text="Vector.remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Lernbar from the List Vector&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="388" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" text="return (List) Vector;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Lernprogramm.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="388" field_type="3" initialValue=" new Vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="388" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public List Vector =  new Vector( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="388" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" text="return Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of Vector&amp;#010;&amp;#010;@return the value of Vector" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="388" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" text="Vector = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of Vector&amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="388" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" text="Vector.add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Lernbar to the List Vector&amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="388" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" text="Vector.remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Lernbar from the List Vector&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="388" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" text="return (List) Vector;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of Vector&amp;#010;&amp;#010;@return List of Vector" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="382" parent_class="382" fileExt=".java" fileName="Lernbar" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="382" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface Lernbar&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="388" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Lernprogramm  = new Lernprogramm ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Lernbar ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="388" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="388" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="388" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Lernprogramm to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="388" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" text="if (.size() >= 1) {&amp;#010;  .remove(value);&amp;#010;} else {&amp;#010;  System.err.println(&quot;ERROR: Cant removeLernprogramm from , minimum number of items reached.&quot;);&amp;#010;}&amp;#010;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Lernprogramm from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="388" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Lernbar.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="388" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="388" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public Lernprogramm  = new Lernprogramm ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="388" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="388" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="388" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type Lernprogramm to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="388" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" text="if (.size() >= 1) {&amp;#010;  .remove(value);&amp;#010;} else {&amp;#010;  System.err.println(&quot;ERROR: Cant removeLernprogramm from , minimum number of items reached.&quot;);&amp;#010;}&amp;#010;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type Lernprogramm from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="388" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="389" parent_class="389" fileExt=".java" fileName="Gesamtwissen" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import Wissenspaket;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="389" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Gesamtwissen&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Gesamtwissen ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Gesamtwissen.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="390" parent_class="390" fileExt=".java" fileName="Benutzer" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="390" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Benutzer&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Benutzer ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Benutzer.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="391" parent_class="391" fileExt=".java" fileName="Repository" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="391" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Repository&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Repository ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Repository.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="392" parent_class="392" fileExt=".java" fileName="Gemeinschaft" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="392" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Gemeinschaft&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Gemeinschaft ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Gemeinschaft.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="393" parent_class="393" fileExt=".java" fileName="Lernstrategie" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="393" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Lernstrategie&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Lernstrategie ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Lernstrategie.java - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:14:49&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <codedocument writeOutCode="false" package="" id="ANTDOC" fileExt=".xml" fileName="build" >
     <textblocks>
      <codeblockwithcomments tag="xmlDecl" text="&lt;?xml version=&quot;1.0&quot;?>" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <xmlelementblock nodeName="project" tag="projectDecl" canDelete="false" >
       <header>
        <codecomment tag="" text="Java ANT build document" />
       </header>
       <textblocks/>
      </xmlelementblock>
     </textblocks>
     <header>
      <codecomment tag="" />
     </header>
    </codedocument>
   </codegenerator>
   <codegenerator language="Cpp" >
    <classifiercodedocument writeOutCode="true" package="" id="27" parent_class="27" fileExt=".cpp" fileName="wissenspaket" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include vector&quot;&amp;#010;#include &quot;lernbar.h&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="103" tag="hblock_tag_0" canDelete="false" classfield_id="103" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="103" tag="hblock_tag_1" canDelete="false" classfield_id="103" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="104" tag="hblock_tag_2" canDelete="false" classfield_id="104" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="104" tag="hblock_tag_3" canDelete="false" classfield_id="104" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="102" tag="hblock_tag_4" canDelete="false" classfield_id="102" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of reifegrad&amp;#010;Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten.&amp;#010;@return the value of reifegrad" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="102" tag="hblock_tag_5" canDelete="false" classfield_id="102" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of reifegrad&amp;#010;Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten.&amp;#010;@return the value of reifegrad" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="36" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="36" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="36" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="36" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="36" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="36" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="36" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="36" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="36" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="36" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="156" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="156" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="156" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="156" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="156" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="156" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="156" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="156" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="156" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="156" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="395" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="395" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="395" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="395" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="395" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="395" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="395" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="395" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="395" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="395" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			wissenspaket.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:11:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="103" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="103" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="103" tag="hblock_tag_0" canDelete="false" classfield_id="103" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="103" tag="hblock_tag_1" canDelete="false" classfield_id="103" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="104" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="104" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="104" tag="hblock_tag_2" canDelete="false" classfield_id="104" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="104" tag="hblock_tag_3" canDelete="false" classfield_id="104" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="102" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten." />
       </header>
       <ccfdeclarationcodeblock parent_id="102" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="102" tag="hblock_tag_4" canDelete="false" classfield_id="102" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of reifegrad&amp;#010;Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten.&amp;#010;@return the value of reifegrad" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="102" tag="hblock_tag_5" canDelete="false" classfield_id="102" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of reifegrad&amp;#010;Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten.&amp;#010;@return the value of reifegrad" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="36" field_type="3" initialValue=" new vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="36" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="36" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="36" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="36" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="36" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="36" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="36" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="36" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="36" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="36" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="36" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="156" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="156" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="156" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="156" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="156" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="156" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="156" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="156" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="156" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="156" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="156" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="156" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="386" field_type="-1" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="386" tag="" canDelete="false" writeOutText="false" classfield_id="386" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="386" tag="" canDelete="false" writeOutText="false" classfield_id="386" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="386" tag="" canDelete="false" writeOutText="false" classfield_id="386" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="386" tag="" canDelete="false" writeOutText="false" classfield_id="386" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="386" tag="" canDelete="false" writeOutText="false" classfield_id="386" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="395" field_type="1" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="395" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="395" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="395" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="395" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="395" tag="hblock_tag_20" canDelete="false" writeOutText="false" classfield_id="395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="28" parent_class="28" fileExt=".cpp" fileName="wissensstruktur" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include vector&quot;&amp;#010;#include &quot;lernbar.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="36" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="36" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="36" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="36" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="36" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="36" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="36" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="36" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="36" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="36" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			wissensstruktur.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 02:02:04&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="36" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="36" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="36" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="36" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="36" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="36" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="36" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="36" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="36" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="36" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="36" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="36" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="37" field_type="3" initialValue=" new vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="383" field_type="-1" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="383" tag="" canDelete="false" writeOutText="false" classfield_id="383" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="383" tag="" canDelete="false" writeOutText="false" classfield_id="383" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="383" tag="" canDelete="false" writeOutText="false" classfield_id="383" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="383" tag="" canDelete="false" writeOutText="false" classfield_id="383" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="383" tag="" canDelete="false" writeOutText="false" classfield_id="383" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="29" parent_class="29" fileExt=".cpp" fileName="wissensbehaelter" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include vector&quot;&amp;#010;#include &quot;lernbar.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="38" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="38" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="38" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="38" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="38" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="38" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="38" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="38" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="38" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="38" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="384" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="384" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="384" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="384" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="384" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="384" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="384" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="384" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="384" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="384" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			wissensbehaelter.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 13:51:08&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="37" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="37" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="38" field_type="3" initialValue=" new vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="38" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="38" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="38" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="38" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="38" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="38" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="38" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="38" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="38" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="38" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="38" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="384" field_type="1" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="384" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="384" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="384" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="384" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="384" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="384" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="384" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="384" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="384" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="384" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="30" parent_class="30" fileExt=".cpp" fileName="wissensobjekt" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include vector&quot;&amp;#010;#include &quot;lernbar.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="38" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="38" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="38" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="38" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="38" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="38" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="38" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="38" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="38" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="38" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			wissensobjekt.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:21:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="38" field_type="3" initialValue=" new vector( )" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="38" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="38" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="38" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="38" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="38" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="38" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="38" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="38" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="38" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="38" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="38" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="385" field_type="35" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="385" tag="" canDelete="false" writeOutText="false" classfield_id="385" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="385" tag="" canDelete="false" writeOutText="false" classfield_id="385" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="385" tag="" canDelete="false" writeOutText="false" classfield_id="385" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="385" tag="" canDelete="false" writeOutText="false" classfield_id="385" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="385" tag="" canDelete="false" writeOutText="false" classfield_id="385" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="398" field_type="7471215" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="398" tag="" canDelete="false" writeOutText="false" classfield_id="398" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="398" tag="" canDelete="false" writeOutText="false" classfield_id="398" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="398" tag="" canDelete="false" writeOutText="false" classfield_id="398" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="398" tag="" canDelete="false" writeOutText="false" classfield_id="398" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="398" tag="" canDelete="false" writeOutText="false" classfield_id="398" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="31" parent_class="31" fileExt=".cpp" fileName="begriffsstruktur" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include vector&quot;&amp;#010;#include &quot;wissensstruktur.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="379" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="379" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="379" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="379" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="379" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="379" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="379" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="379" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="379" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="379" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			begriffsstruktur.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:22:18&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="379" field_type="3" initialValue=" new vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="379" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="379" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="379" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="379" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="379" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="379" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="379" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="379" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="379" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="379" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="379" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="32" parent_class="32" fileExt=".cpp" fileName="begriff" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include vector&quot;&amp;#010;#include &quot;wissensbehaelter.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="379" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="379" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="379" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="379" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="379" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="379" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="379" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="379" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="379" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="379" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="380" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="380" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="380" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="380" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="380" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="380" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="380" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="380" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="380" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="380" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="397" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="397" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="397" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="397" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="397" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="397" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="397" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="397" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="397" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="397" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			begriff.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:20:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="379" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="379" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="379" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="379" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="379" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="379" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="379" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="379" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="379" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="379" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="379" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="379" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="380" field_type="3" initialValue=" new vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="380" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="380" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="380" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="380" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="380" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="380" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="380" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="380" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="380" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="380" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="380" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="397" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="397" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="397" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="397" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="397" tag="hblock_tag_11" canDelete="false" writeOutText="false" classfield_id="397" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="397" tag="hblock_tag_12" canDelete="false" writeOutText="false" classfield_id="397" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="397" tag="hblock_tag_13" canDelete="false" writeOutText="false" classfield_id="397" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="397" tag="hblock_tag_14" canDelete="false" writeOutText="false" classfield_id="397" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="33" parent_class="33" fileExt=".cpp" fileName="begriffsbeschreibung" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include vector&quot;&amp;#010;#include &quot;wissensobjekt.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="380" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="380" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="380" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="380" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="380" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="380" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="380" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="380" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="380" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="380" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			begriffsbeschreibung.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:20:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="380" field_type="3" initialValue=" new vector( )" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="380" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="380" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="380" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="380" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="380" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="380" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="380" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="380" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="380" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="380" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="380" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="106" parent_class="106" fileExt=".cpp" fileName="metainformation" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="108" tag="hblock_tag_0" canDelete="false" classfield_id="108" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="108" tag="hblock_tag_1" canDelete="false" classfield_id="108" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="110" tag="hblock_tag_2" canDelete="false" classfield_id="110" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="110" tag="hblock_tag_3" canDelete="false" classfield_id="110" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="109" tag="hblock_tag_4" canDelete="false" classfield_id="109" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="109" tag="hblock_tag_5" canDelete="false" classfield_id="109" role_id="-1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="156" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="156" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="156" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="156" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="156" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="156" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="156" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="156" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="156" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="156" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			metainformation.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:15:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="108" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="108" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="108" tag="hblock_tag_0" canDelete="false" classfield_id="108" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="108" tag="hblock_tag_1" canDelete="false" classfield_id="108" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="110" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="110" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="110" tag="hblock_tag_2" canDelete="false" classfield_id="110" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="110" tag="hblock_tag_3" canDelete="false" classfield_id="110" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="109" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="109" tag="" canDelete="false" indentLevel="1" role_id="-1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="109" tag="hblock_tag_4" canDelete="false" classfield_id="109" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="109" tag="hblock_tag_5" canDelete="false" classfield_id="109" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="156" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="156" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="156" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="156" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="156" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="156" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="156" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="156" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="156" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="156" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="156" tag="hblock_tag_10" canDelete="false" writeOutText="false" classfield_id="156" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="220" parent_class="220" fileExt=".cpp" fileName="diagramm" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;wissensobjekt.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="397" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="397" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="397" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="397" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="397" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="397" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="397" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="397" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="397" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="397" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			diagramm.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:21:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="397" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="397" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="397" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="397" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="397" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="397" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="397" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="397" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="397" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="397" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="397" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="397" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="398" field_type="36" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="398" tag="" canDelete="false" writeOutText="false" classfield_id="398" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="398" tag="" canDelete="false" writeOutText="false" classfield_id="398" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="398" tag="" canDelete="false" writeOutText="false" classfield_id="398" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="398" tag="" canDelete="false" writeOutText="false" classfield_id="398" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="398" tag="" canDelete="false" writeOutText="false" classfield_id="398" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="271" parent_class="271" fileExt=".cpp" fileName="laufzeitsystem" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			laufzeitsystem.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="273" parent_class="273" fileExt=".cpp" fileName="i18n" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			i18n.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="274" parent_class="274" fileExt=".cpp" fileName="benutzerverwaltung" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			benutzerverwaltung.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="275" parent_class="275" fileExt=".cpp" fileName="xmlparser" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			xmlparser.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="276" parent_class="276" fileExt=".cpp" fileName="sitzungskontrolle" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			sitzungskontrolle.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="277" parent_class="277" fileExt=".cpp" fileName="pluginverwaltung" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			pluginverwaltung.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="280" parent_class="280" fileExt=".cpp" fileName="ressource" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ressource.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="286" parent_class="286" fileExt=".cpp" fileName="ressourcenverwaltung" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ressourcenverwaltung.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <codedocument writeOutCode="false" package="" id="Makefile_DOC" fileExt="" fileName="Makefile" >
     <textblocks/>
     <header>
      <codecomment tag="" />
     </header>
    </codedocument>
    <classifiercodedocument writeOutCode="true" package="" id="381" parent_class="381" fileExt=".cpp" fileName="lernprogramm" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include vector&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="388" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="388" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="388" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="388" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="388" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="388" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="388" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="388" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="388" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="388" role_id="0" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			lernprogramm.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:13:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="388" field_type="3" initialValue=" new vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="388" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="388" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="388" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="388" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="388" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="388" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="388" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="388" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="388" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="388" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="388" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="382" parent_class="382" fileExt=".cpp" fileName="lernbar" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="384" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="384" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="384" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="384" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="384" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="384" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="384" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="384" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="384" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="384" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="385" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="385" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="385" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="385" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="385" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="385" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="385" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="385" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="385" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="385" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="388" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="388" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="388" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="388" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="2" parent_id="388" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="388" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="3" parent_id="388" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="388" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="4" parent_id="388" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="388" role_id="1" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			lernbar.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:11:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="383" field_type="-1" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="383" tag="" canDelete="false" writeOutText="false" classfield_id="383" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="383" tag="" canDelete="false" writeOutText="false" classfield_id="383" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="383" tag="" canDelete="false" writeOutText="false" classfield_id="383" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="383" tag="" canDelete="false" writeOutText="false" classfield_id="383" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="383" tag="" canDelete="false" writeOutText="false" classfield_id="383" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="384" field_type="1" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="384" tag="hblock_tag_0" canDelete="false" writeOutText="false" classfield_id="384" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="384" tag="hblock_tag_1" canDelete="false" writeOutText="false" classfield_id="384" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="384" tag="hblock_tag_2" canDelete="false" writeOutText="false" classfield_id="384" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="384" tag="hblock_tag_3" canDelete="false" writeOutText="false" classfield_id="384" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="384" tag="hblock_tag_4" canDelete="false" writeOutText="false" classfield_id="384" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="385" field_type="1" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="385" tag="hblock_tag_5" canDelete="false" writeOutText="false" classfield_id="385" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="385" tag="hblock_tag_6" canDelete="false" writeOutText="false" classfield_id="385" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="385" tag="hblock_tag_7" canDelete="false" writeOutText="false" classfield_id="385" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="385" tag="hblock_tag_8" canDelete="false" writeOutText="false" classfield_id="385" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="385" tag="hblock_tag_9" canDelete="false" writeOutText="false" classfield_id="385" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="386" field_type="-1" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="386" tag="" canDelete="false" writeOutText="false" classfield_id="386" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="386" tag="" canDelete="false" writeOutText="false" classfield_id="386" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="386" tag="" canDelete="false" writeOutText="false" classfield_id="386" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="386" tag="" canDelete="false" writeOutText="false" classfield_id="386" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="386" tag="" canDelete="false" writeOutText="false" classfield_id="386" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="388" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="388" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="388" tag="hblock_tag_15" canDelete="false" writeOutText="false" classfield_id="388" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="388" tag="hblock_tag_16" canDelete="false" writeOutText="false" classfield_id="388" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="388" tag="hblock_tag_17" canDelete="false" writeOutText="false" classfield_id="388" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="388" tag="hblock_tag_18" canDelete="false" writeOutText="false" classfield_id="388" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="388" tag="hblock_tag_19" canDelete="false" writeOutText="false" classfield_id="388" role_id="1" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="389" parent_class="389" fileExt=".cpp" fileName="gesamtwissen" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;#include &quot;wissenspaket.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			gesamtwissen.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:13:51&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="395" field_type="15" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="395" tag="" canDelete="false" writeOutText="false" classfield_id="395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="395" tag="" canDelete="false" writeOutText="false" classfield_id="395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="395" tag="" canDelete="false" writeOutText="false" classfield_id="395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="395" tag="" canDelete="false" writeOutText="false" classfield_id="395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="395" tag="" canDelete="false" writeOutText="false" classfield_id="395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="390" parent_class="390" fileExt=".cpp" fileName="benutzer" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			benutzer.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:13:58&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="391" parent_class="391" fileExt=".cpp" fileName="repository" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			repository.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 13:50:19&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="392" parent_class="392" fileExt=".cpp" fileName="gemeinschaft" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			gemeinschaft.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:13:34&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="393" parent_class="393" fileExt=".cpp" fileName="lernstrategie" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			lernstrategie.cpp - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 13:46:25&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader27" parent_class="27" fileExt=".h" fileName="wissenspaket" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WISSENSPAKET_H&amp;#010;#define WISSENSPAKET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &lt;vector>&amp;#010;#include &quot;lernbar.h&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="27" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Wissenspaket&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="103" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" string name;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="104" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text=" string beschreibung;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="102" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" string reifegrad;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="36" tag="tblock_3" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" vector Vector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="156" tag="tblock_4" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Metainformation ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Wissenspaket ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="103" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="103" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="103" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="103" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="104" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="104" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="104" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="104" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="102" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="102" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of reifegrad&amp;#010;Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten.&amp;#010;@return the value of reifegrad" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="102" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="102" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of reifegrad&amp;#010;Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten.&amp;#010;@return the value of reifegrad" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="36" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="36" tag="hblock_tag_11" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="36" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="36" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="36" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="156" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="156" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="156" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="156" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="156" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WISSENSPAKET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			wissenspaket.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:11:54&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="103" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="103" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" string name;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="103" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="103" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="103" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="103" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="104" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="104" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text=" string beschreibung;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="104" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="104" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="104" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="104" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="102" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten." />
       </header>
       <ccfdeclarationcodeblock parent_id="102" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" string reifegrad;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="102" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="102" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of reifegrad&amp;#010;Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten.&amp;#010;@return the value of reifegrad" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="102" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="102" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of reifegrad&amp;#010;Dieses Attribut beschreibt den Reifegrad des gesamten Wissenspakets. Es ist vorgesehen, hier definierte Stufen wie &quot;Stub&quot;, &quot;Entwurf&quot;, &quot;Alpha&quot;, &quot;Beta&quot; usw. anzubieten.&amp;#010;@return the value of reifegrad" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="36" field_type="3" initialValue=" new vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="36" tag="tblock_3" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" vector Vector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="36" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="36" tag="hblock_tag_11" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="36" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="36" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="36" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="156" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="156" tag="tblock_4" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Metainformation ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="156" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="156" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="156" tag="hblock_tag_17" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="156" tag="hblock_tag_18" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="156" tag="hblock_tag_19" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="386" field_type="7471201" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Lernbar ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="386" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="386" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="386" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="386" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="386" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="395" field_type="7798900" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Gesamtwissen ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader28" parent_class="28" fileExt=".h" fileName="wissensstruktur" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WISSENSSTRUKTUR_H&amp;#010;#define WISSENSSTRUKTUR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &lt;vector>&amp;#010;#include &quot;lernbar.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="28" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Wissensstruktur&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="36" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Wissenspaket ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="37" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" vector Vector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Wissensstruktur ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="36" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="36" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="36" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="36" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="36" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WISSENSSTRUKTUR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			wissensstruktur.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 02:02:04&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="36" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="36" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Wissenspaket ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="36" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="36" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="36" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="36" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="36" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="36" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="37" field_type="3" initialValue=" new vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="37" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" vector Vector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="383" field_type="7209074" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Lernbar ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="383" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="383" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="383" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="383" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="383" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader29" parent_class="29" fileExt=".h" fileName="wissensbehaelter" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WISSENSBEHAELTER_H&amp;#010;#define WISSENSBEHAELTER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &lt;vector>&amp;#010;#include &quot;lernbar.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="29" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Wissensbehaelter&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="37" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Wissensstruktur ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="38" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" vector Vector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Wissensbehaelter ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="38" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="38" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="38" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="38" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="38" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WISSENSBEHAELTER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			wissensbehaelter.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 13:51:08&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="37" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="37" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Wissensstruktur ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="37" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="37" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="37" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="37" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="37" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="37" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="38" field_type="3" initialValue=" new vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="38" tag="tblock_1" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" vector Vector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="38" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="38" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="38" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="38" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="38" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="384" field_type="7471205" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Lernbar ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="384" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="384" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="384" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="384" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="384" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader30" parent_class="30" fileExt=".h" fileName="wissensobjekt" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WISSENSOBJEKT_H&amp;#010;#define WISSENSOBJEKT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &lt;vector>&amp;#010;#include &quot;lernbar.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="30" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Wissensobjekt&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="38" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" vector Vector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Wissensobjekt ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="38" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="38" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="38" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="38" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="38" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WISSENSOBJEKT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			wissensobjekt.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:21:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="38" field_type="3" initialValue=" new vector( )" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="38" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" vector Vector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="38" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="38" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="38" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="38" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="38" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="38" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="385" field_type="6357090" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Lernbar ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="385" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="385" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="385" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="385" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="385" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="398" field_type="6357106" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Diagramm ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader31" parent_class="31" fileExt=".h" fileName="begriffsstruktur" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BEGRIFFSSTRUKTUR_H&amp;#010;#define BEGRIFFSSTRUKTUR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &lt;vector>&amp;#010;#include &quot;wissensstruktur.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="31" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Begriffsstruktur&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="379" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" vector Vector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Begriffsstruktur ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="379" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="379" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="379" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="379" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="379" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BEGRIFFSSTRUKTUR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			begriffsstruktur.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:22:18&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="379" field_type="3" initialValue=" new vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="379" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" vector Vector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="379" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="379" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="379" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="379" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="379" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader32" parent_class="32" fileExt=".h" fileName="begriff" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BEGRIFF_H&amp;#010;#define BEGRIFF_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &lt;vector>&amp;#010;#include &quot;wissensbehaelter.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="32" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Begriff&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="379" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Begriffsstruktur ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="380" tag="tblock_5" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" vector Vector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="397" tag="tblock_11" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Diagramm ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Begriff ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="379" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="379" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="379" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="379" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="379" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="380" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="380" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="380" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="380" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="380" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="397" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="397" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="397" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="397" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="397" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BEGRIFF_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			begriff.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:20:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="379" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="379" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Begriffsstruktur ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="379" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="379" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="379" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="379" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="379" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="379" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="380" field_type="3" initialValue=" new vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="380" tag="tblock_5" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" vector Vector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="380" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="380" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="380" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="380" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="380" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="397" field_type="3" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="397" tag="tblock_11" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Diagramm ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="397" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="397" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="397" tag="hblock_tag_14" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="397" tag="hblock_tag_15" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="397" tag="hblock_tag_16" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader33" parent_class="33" fileExt=".h" fileName="begriffsbeschreibung" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BEGRIFFSBESCHREIBUNG_H&amp;#010;#define BEGRIFFSBESCHREIBUNG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &lt;vector>&amp;#010;#include &quot;wissensobjekt.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="33" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Begriffsbeschreibung&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="380" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" vector Vector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Begriffsbeschreibung ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="380" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="380" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="380" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="380" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="380" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BEGRIFFSBESCHREIBUNG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			begriffsbeschreibung.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:20:48&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="380" field_type="3" initialValue=" new vector( )" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="380" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" vector Vector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="380" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="380" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="380" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="380" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="380" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="380" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader106" parent_class="106" fileExt=".h" fileName="metainformation" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef METAINFORMATION_H&amp;#010;#define METAINFORMATION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="106" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Metainformation&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="108" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" string kategorien;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="110" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text=" string schluesselworte;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="109" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" string historie;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="156" tag="tblock_3" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Wissenspaket ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Metainformation ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="108" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="108" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="108" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="108" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="110" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="110" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="110" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="110" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="109" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="109" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="109" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="109" role_id="-1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="156" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="156" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="156" tag="hblock_tag_11" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="156" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="156" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //METAINFORMATION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			metainformation.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:15:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="108" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="108" tag="tblock_0" canDelete="false" indentLevel="1" role_id="-1" text=" string kategorien;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="108" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="108" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="108" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="108" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="110" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="110" tag="tblock_1" canDelete="false" indentLevel="1" role_id="-1" text=" string schluesselworte;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="110" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="110" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="110" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="110" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="109" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="109" tag="tblock_2" canDelete="false" indentLevel="1" role_id="-1" text=" string historie;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="109" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="109" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="109" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="109" role_id="-1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="156" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="156" tag="tblock_3" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Wissenspaket ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="156" tag="hblock_tag_9" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="156" tag="hblock_tag_10" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="156" tag="hblock_tag_11" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="156" tag="hblock_tag_12" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="156" tag="hblock_tag_13" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="156" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader220" parent_class="220" fileExt=".h" fileName="diagramm" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DIAGRAMM_H&amp;#010;#define DIAGRAMM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;wissensobjekt.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="220" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Diagramm&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="397" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Begriff ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Diagramm ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="397" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="397" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="397" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="397" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="397" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DIAGRAMM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			diagramm.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:21:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="397" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="397" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Begriff ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="397" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="397" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="397" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="397" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="397" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="397" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="398" field_type="6619242" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Wissensobjekt ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="398" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="398" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader271" parent_class="271" fileExt=".h" fileName="laufzeitsystem" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LAUFZEITSYSTEM_H&amp;#010;#define LAUFZEITSYSTEM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="271" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Laufzeitsystem&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Laufzeitsystem ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LAUFZEITSYSTEM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			laufzeitsystem.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader273" parent_class="273" fileExt=".h" fileName="i18n" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef I18N_H&amp;#010;#define I18N_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="273" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class I18n&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="I18n ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //I18N_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			i18n.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader274" parent_class="274" fileExt=".h" fileName="benutzerverwaltung" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BENUTZERVERWALTUNG_H&amp;#010;#define BENUTZERVERWALTUNG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="274" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Benutzerverwaltung&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Benutzerverwaltung ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BENUTZERVERWALTUNG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			benutzerverwaltung.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader275" parent_class="275" fileExt=".h" fileName="xmlparser" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef XMLPARSER_H&amp;#010;#define XMLPARSER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="275" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class XMLparser&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="XMLparser ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //XMLPARSER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			xmlparser.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader276" parent_class="276" fileExt=".h" fileName="sitzungskontrolle" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SITZUNGSKONTROLLE_H&amp;#010;#define SITZUNGSKONTROLLE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="276" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Sitzungskontrolle&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Sitzungskontrolle ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SITZUNGSKONTROLLE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			sitzungskontrolle.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader277" parent_class="277" fileExt=".h" fileName="pluginverwaltung" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef PLUGINVERWALTUNG_H&amp;#010;#define PLUGINVERWALTUNG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="277" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Pluginverwaltung&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Pluginverwaltung ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //PLUGINVERWALTUNG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			pluginverwaltung.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader280" parent_class="280" fileExt=".h" fileName="ressource" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RESSOURCE_H&amp;#010;#define RESSOURCE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <cppheaderclassdeclarationblock parent_id="280" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Interface Ressource&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Ressource ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RESSOURCE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ressource.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader286" parent_class="286" fileExt=".h" fileName="ressourcenverwaltung" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RESSOURCENVERWALTUNG_H&amp;#010;#define RESSOURCENVERWALTUNG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="286" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Ressourcenverwaltung&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Ressourcenverwaltung ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RESSOURCENVERWALTUNG_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ressourcenverwaltung.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 01:52:50&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader381" parent_class="381" fileExt=".h" fileName="lernprogramm" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LERNPROGRAMM_H&amp;#010;#define LERNPROGRAMM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &lt;vector>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="381" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Lernprogramm&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="388" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" vector Vector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Lernprogramm ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="388" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="388" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="388" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="388" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="388" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LERNPROGRAMM_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			lernprogramm.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:13:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="388" field_type="3" initialValue=" new vector( )" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="388" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" vector Vector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="388" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="388" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="388" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="388" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="388" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader382" parent_class="382" fileExt=".h" fileName="lernbar" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LERNBAR_H&amp;#010;#define LERNBAR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <cppheaderclassdeclarationblock parent_id="382" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Interface Lernbar&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="388" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Lernprogramm ;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Lernbar ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="388" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="388" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="2" parent_id="388" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="3" parent_id="388" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="4" parent_id="388" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LERNBAR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			lernbar.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:11:33&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="383" field_type="7012469" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Wissensstruktur ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="383" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="383" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="383" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="383" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="383" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="383" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="384" field_type="6619233" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Wissensbehaelter ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="384" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="384" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="384" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="384" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="384" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="384" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="385" field_type="7012453" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Wissensobjekt ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="385" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="385" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="385" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="385" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="385" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="385" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="386" field_type="7602277" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Wissenspaket ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="386" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="386" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="386" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="386" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="386" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="386" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="388" field_type="3" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="388" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text=" Lernprogramm ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="388" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="388" tag="hblock_tag_5" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="388" tag="hblock_tag_6" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="388" tag="hblock_tag_7" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="388" tag="hblock_tag_8" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="388" role_id="1" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader389" parent_class="389" fileExt=".h" fileName="gesamtwissen" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GESAMTWISSEN_H&amp;#010;#define GESAMTWISSEN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;wissenspaket.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="389" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Gesamtwissen&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Gesamtwissen ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GESAMTWISSEN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			gesamtwissen.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:13:51&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="395" field_type="7536750" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text=" Wissenspaket ;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="395" tag="" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="395" role_id="0" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader390" parent_class="390" fileExt=".h" fileName="benutzer" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BENUTZER_H&amp;#010;#define BENUTZER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="390" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Benutzer&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Benutzer ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BENUTZER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			benutzer.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:13:58&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader391" parent_class="391" fileExt=".h" fileName="repository" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef REPOSITORY_H&amp;#010;#define REPOSITORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="391" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Repository&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Repository ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //REPOSITORY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			repository.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 13:50:19&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader392" parent_class="392" fileExt=".h" fileName="gemeinschaft" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GEMEINSCHAFT_H&amp;#010;#define GEMEINSCHAFT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="392" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Gemeinschaft&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Gemeinschaft ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GEMEINSCHAFT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			gemeinschaft.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 14:13:34&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader393" parent_class="393" fileExt=".h" fileName="lernstrategie" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LERNSTRATEGIE_H&amp;#010;#define LERNSTRATEGIE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="393" tag="classDeclarationBlock" canDelete="false" role_id="-1" >
         <header>
          <cppcodecomment tag="" text="Class Lernstrategie&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Lernstrategie ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LERNSTRATEGIE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			lernstrategie.h - Copyright matthias&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/opt/kde3/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Sa Aug 14 2004 at 13:46:25&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.content>
</XMI>
